// Code generated by go-swagger; DO NOT EDIT.

package restapi

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
)

var (
	// SwaggerJSON embedded version of the swagger document used at generation time
	SwaggerJSON json.RawMessage
	// FlatSwaggerJSON embedded flattened version of the swagger document used at generation time
	FlatSwaggerJSON json.RawMessage
)

func init() {
	SwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "98Point6 Drop Token microservice",
    "title": "98point6DropToken",
    "version": "0.1.0"
  },
  "paths": {
    "/drop_token": {
      "get": {
        "operationId": "GetAllGames",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AllGames"
            }
          }
        }
      },
      "post": {
        "operationId": "CreateGame",
        "parameters": [
          {
            "name": "NewGame",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NewGame"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Game"
            }
          },
          "400": {
            "description": "Malformed Request",
            "schema": {
              "$ref": "#/definitions/MalformedRequest"
            }
          }
        }
      }
    },
    "/drop_token/{gameId}": {
      "get": {
        "operationId": "GetGame",
        "parameters": [
          {
            "type": "string",
            "name": "gameId",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GameState"
            }
          },
          "400": {
            "description": "Malformed Request",
            "schema": {
              "$ref": "#/definitions/MalformedRequest"
            }
          },
          "404": {
            "description": "Game not found",
            "schema": {
              "$ref": "#/definitions/MalformedRequest"
            }
          }
        }
      }
    },
    "/drop_token/{gameId}/moves": {
      "get": {
        "operationId": "GetAllMoves",
        "parameters": [
          {
            "type": "string",
            "name": "gameId",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AllMoves"
            }
          },
          "400": {
            "description": "Malformed Request",
            "schema": {
              "$ref": "#/definitions/MalformedRequest"
            }
          },
          "404": {
            "description": "Game not found",
            "schema": {
              "$ref": "#/definitions/MalformedRequest"
            }
          }
        }
      }
    },
    "/drop_token/{gameId}/moves/{move_number}": {
      "get": {
        "operationId": "GetMove",
        "parameters": [
          {
            "type": "string",
            "name": "gameId",
            "in": "path",
            "required": true
          },
          {
            "type": "integer",
            "name": "move_number",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Move"
            }
          },
          "400": {
            "description": "Malformed Request.",
            "schema": {
              "$ref": "#/definitions/MalformedRequest"
            }
          },
          "404": {
            "description": "Game/Move not found",
            "schema": {
              "$ref": "#/definitions/MalformedRequest"
            }
          }
        }
      }
    },
    "/drop_token/{gameId}/{playerId}": {
      "post": {
        "operationId": "MakeMove",
        "parameters": [
          {
            "type": "string",
            "name": "gameId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "playerId",
            "in": "path",
            "required": true
          },
          {
            "name": "NewMove",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NewMove"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/MoveOutput"
            }
          },
          "400": {
            "description": "Malformed Request. Illegal move.",
            "schema": {
              "$ref": "#/definitions/MalformedRequest"
            }
          },
          "404": {
            "description": "Game/player not found",
            "schema": {
              "$ref": "#/definitions/MalformedRequest"
            }
          },
          "409": {
            "description": "Played out of turn",
            "schema": {
              "$ref": "#/definitions/MalformedRequest"
            }
          }
        }
      },
      "delete": {
        "operationId": "RemovePlayer",
        "parameters": [
          {
            "type": "string",
            "name": "gameId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "playerId",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "202": {
            "description": "OK"
          },
          "404": {
            "description": "Game/player not found",
            "schema": {
              "$ref": "#/definitions/MalformedRequest"
            }
          },
          "410": {
            "description": "Game is already DONE",
            "schema": {
              "$ref": "#/definitions/MalformedRequest"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "AllGames": {
      "type": "object",
      "required": [
        "games"
      ],
      "properties": {
        "games": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "AllMoves": {
      "type": "object",
      "required": [
        "moves"
      ],
      "properties": {
        "moves": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Move"
          }
        }
      }
    },
    "Game": {
      "type": "object",
      "properties": {
        "gameId": {
          "type": "string"
        }
      }
    },
    "GameState": {
      "type": "object",
      "required": [
        "players",
        "state"
      ],
      "properties": {
        "players": {
          "type": "array",
          "items": {
            "type": "string",
            "maxItems": 2,
            "minItems": 2
          }
        },
        "state": {
          "type": "string"
        },
        "winner": {
          "type": "string"
        }
      }
    },
    "MalformedRequest": {
      "description": "Malformed request",
      "type": "object",
      "properties": {
        "code": {
          "type": "integer"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "Move": {
      "type": "object",
      "required": [
        "type",
        "player"
      ],
      "properties": {
        "column": {
          "type": "integer"
        },
        "player": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      }
    },
    "MoveOutput": {
      "type": "object",
      "required": [
        "move"
      ],
      "properties": {
        "move": {
          "type": "string"
        }
      }
    },
    "NewGame": {
      "type": "object",
      "required": [
        "players",
        "columns",
        "rows"
      ],
      "properties": {
        "columns": {
          "type": "integer"
        },
        "players": {
          "type": "array",
          "items": {
            "type": "string",
            "maxItems": 2,
            "minItems": 2
          }
        },
        "rows": {
          "type": "integer"
        }
      }
    },
    "NewMove": {
      "type": "object",
      "required": [
        "column"
      ],
      "properties": {
        "column": {
          "type": "integer"
        }
      }
    }
  }
}`))
	FlatSwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "98Point6 Drop Token microservice",
    "title": "98point6DropToken",
    "version": "0.1.0"
  },
  "paths": {
    "/drop_token": {
      "get": {
        "operationId": "GetAllGames",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AllGames"
            }
          }
        }
      },
      "post": {
        "operationId": "CreateGame",
        "parameters": [
          {
            "name": "NewGame",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NewGame"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Game"
            }
          },
          "400": {
            "description": "Malformed Request",
            "schema": {
              "$ref": "#/definitions/MalformedRequest"
            }
          }
        }
      }
    },
    "/drop_token/{gameId}": {
      "get": {
        "operationId": "GetGame",
        "parameters": [
          {
            "type": "string",
            "name": "gameId",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GameState"
            }
          },
          "400": {
            "description": "Malformed Request",
            "schema": {
              "$ref": "#/definitions/MalformedRequest"
            }
          },
          "404": {
            "description": "Game not found",
            "schema": {
              "$ref": "#/definitions/MalformedRequest"
            }
          }
        }
      }
    },
    "/drop_token/{gameId}/moves": {
      "get": {
        "operationId": "GetAllMoves",
        "parameters": [
          {
            "type": "string",
            "name": "gameId",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AllMoves"
            }
          },
          "400": {
            "description": "Malformed Request",
            "schema": {
              "$ref": "#/definitions/MalformedRequest"
            }
          },
          "404": {
            "description": "Game not found",
            "schema": {
              "$ref": "#/definitions/MalformedRequest"
            }
          }
        }
      }
    },
    "/drop_token/{gameId}/moves/{move_number}": {
      "get": {
        "operationId": "GetMove",
        "parameters": [
          {
            "type": "string",
            "name": "gameId",
            "in": "path",
            "required": true
          },
          {
            "type": "integer",
            "name": "move_number",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Move"
            }
          },
          "400": {
            "description": "Malformed Request.",
            "schema": {
              "$ref": "#/definitions/MalformedRequest"
            }
          },
          "404": {
            "description": "Game/Move not found",
            "schema": {
              "$ref": "#/definitions/MalformedRequest"
            }
          }
        }
      }
    },
    "/drop_token/{gameId}/{playerId}": {
      "post": {
        "operationId": "MakeMove",
        "parameters": [
          {
            "type": "string",
            "name": "gameId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "playerId",
            "in": "path",
            "required": true
          },
          {
            "name": "NewMove",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NewMove"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/MoveOutput"
            }
          },
          "400": {
            "description": "Malformed Request. Illegal move.",
            "schema": {
              "$ref": "#/definitions/MalformedRequest"
            }
          },
          "404": {
            "description": "Game/player not found",
            "schema": {
              "$ref": "#/definitions/MalformedRequest"
            }
          },
          "409": {
            "description": "Played out of turn",
            "schema": {
              "$ref": "#/definitions/MalformedRequest"
            }
          }
        }
      },
      "delete": {
        "operationId": "RemovePlayer",
        "parameters": [
          {
            "type": "string",
            "name": "gameId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "playerId",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "202": {
            "description": "OK"
          },
          "404": {
            "description": "Game/player not found",
            "schema": {
              "$ref": "#/definitions/MalformedRequest"
            }
          },
          "410": {
            "description": "Game is already DONE",
            "schema": {
              "$ref": "#/definitions/MalformedRequest"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "AllGames": {
      "type": "object",
      "required": [
        "games"
      ],
      "properties": {
        "games": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "AllMoves": {
      "type": "object",
      "required": [
        "moves"
      ],
      "properties": {
        "moves": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Move"
          }
        }
      }
    },
    "Game": {
      "type": "object",
      "properties": {
        "gameId": {
          "type": "string"
        }
      }
    },
    "GameState": {
      "type": "object",
      "required": [
        "players",
        "state"
      ],
      "properties": {
        "players": {
          "type": "array",
          "items": {
            "type": "string",
            "maxItems": 2,
            "minItems": 2
          }
        },
        "state": {
          "type": "string"
        },
        "winner": {
          "type": "string"
        }
      }
    },
    "MalformedRequest": {
      "description": "Malformed request",
      "type": "object",
      "properties": {
        "code": {
          "type": "integer"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "Move": {
      "type": "object",
      "required": [
        "type",
        "player"
      ],
      "properties": {
        "column": {
          "type": "integer"
        },
        "player": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      }
    },
    "MoveOutput": {
      "type": "object",
      "required": [
        "move"
      ],
      "properties": {
        "move": {
          "type": "string"
        }
      }
    },
    "NewGame": {
      "type": "object",
      "required": [
        "players",
        "columns",
        "rows"
      ],
      "properties": {
        "columns": {
          "type": "integer"
        },
        "players": {
          "type": "array",
          "items": {
            "type": "string",
            "maxItems": 2,
            "minItems": 2
          }
        },
        "rows": {
          "type": "integer"
        }
      }
    },
    "NewMove": {
      "type": "object",
      "required": [
        "column"
      ],
      "properties": {
        "column": {
          "type": "integer"
        }
      }
    }
  }
}`))
}
