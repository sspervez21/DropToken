// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "98point6DropToken/models"
)

// CreateGameOKCode is the HTTP code returned for type CreateGameOK
const CreateGameOKCode int = 200

/*CreateGameOK OK

swagger:response createGameOK
*/
type CreateGameOK struct {

	/*
	  In: Body
	*/
	Payload *models.Game `json:"body,omitempty"`
}

// NewCreateGameOK creates CreateGameOK with default headers values
func NewCreateGameOK() *CreateGameOK {

	return &CreateGameOK{}
}

// WithPayload adds the payload to the create game o k response
func (o *CreateGameOK) WithPayload(payload *models.Game) *CreateGameOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create game o k response
func (o *CreateGameOK) SetPayload(payload *models.Game) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateGameOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// CreateGameBadRequestCode is the HTTP code returned for type CreateGameBadRequest
const CreateGameBadRequestCode int = 400

/*CreateGameBadRequest Malformed Request

swagger:response createGameBadRequest
*/
type CreateGameBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.MalformedRequest `json:"body,omitempty"`
}

// NewCreateGameBadRequest creates CreateGameBadRequest with default headers values
func NewCreateGameBadRequest() *CreateGameBadRequest {

	return &CreateGameBadRequest{}
}

// WithPayload adds the payload to the create game bad request response
func (o *CreateGameBadRequest) WithPayload(payload *models.MalformedRequest) *CreateGameBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create game bad request response
func (o *CreateGameBadRequest) SetPayload(payload *models.MalformedRequest) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateGameBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
